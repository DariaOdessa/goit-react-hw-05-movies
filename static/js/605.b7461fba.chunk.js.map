{"version":3,"file":"static/js/605.b7461fba.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.js","components/BackLink/Backlink.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding-left: 32px;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  margin-top: 32px;\n\n  :hover {\n    color: orangered;\n  }\n`;","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nexport default BackLink;\n","import styled from \"styled-components\";\nimport {Link } from \"react-router-dom\";\n\nexport const MovieWrapper = styled.div`\ndisplay: flex;\npadding: 32px 32px;\n`\nexport const Poster = styled.img`\nwidth: 400px;\nmargin-right: 30px;\n`;\n\nexport const DetailsWrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\nwidth: 800px;\n`\n\nexport const Title = styled.h1`\ntext-align: center;\nfont-size: 46px;\npadding: 16px;\n`\nexport const Tagline = styled.h2`\nfont-style: italic;\ntext-align: center;\npadding: 16px;\n`\n\nexport const Overview = styled.p`\ndisplay: block;\nfont-size: 24px;\npadding: 16px;\n`\nexport const LinkList = styled.ul`\ndisplay: flex;\nflex-grow: 2;\njustify-content: space-evenly;\nalign-items: flex-end;\ntext-align: center;\nmargin: 0px;\npadding: 0px;\n`\n\nexport const DetailsLink = styled(Link)`\ndisplay: block;\nwidth: 250px;\nfont-size: 24px;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  border: 1px solid orangered;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: orangered;\n  }\n`;\n","import { Suspense } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from 'services/api';\nimport { useState, useEffect } from 'react';\nimport BackLink from '../../components/BackLink/Backlink.jsx';\nimport {\n  MovieWrapper,\n  Poster,\n  DetailsWrapper,\n  Tagline,\n  Title,\n  Overview,\n  DetailsLink,\n  LinkList,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  console.log(location);\n\n  useEffect(() => {\n    async function getFilm() {\n      try {\n        const film = await getMovieDetails(id);\n        setMovie(film);\n        return;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getFilm();\n  }, [id]);\n\n  console.log(movie);\n  const { poster_path, title, overview, tagline } = movie;\n\n  return (\n    <div>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      <MovieWrapper>\n        <Poster\n          src={poster_path && `https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title}\n        />\n        <DetailsWrapper>\n          <Title>{title}</Title>\n          {tagline && <Tagline>\"{tagline}\"</Tagline>}\n          <Overview>{overview}</Overview>\n          <LinkList>\n            <li>\n              <DetailsLink to=\"cast\" state={{ from: location.state.from }}>\n                Cast\n              </DetailsLink>\n            </li>\n            <li>\n              <DetailsLink to=\"reviews\" state={{ from: location.state.from }}>\n                Reviews\n              </DetailsLink>\n            </li>\n          </LinkList>\n        </DetailsWrapper>\n      </MovieWrapper>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e2ab7616285daea8fac6003f5ccdd72f';\n\nexport const getTrendyMovies = async() => {\n    try {\n        const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`); \n        return response.data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getSearchedMovies = async(query) => {\n    try {\n        const response = await axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false`); \n        return response.data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getMovieDetails = async(movieId) => {\n    try {\n        const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}&language=en-US`); \n        return response.data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getMovieCredits = async(movieId) => {\n    try {\n        const response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`); \n        console.log(response.data);\n        return response.data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getMovieRewiews = async(movieId) => {\n    try {\n        const response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`); \n         console.log(response.data);\n        return response.data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n};\n\n\n\n\n\n\n"],"names":["StyledLink","styled","Link","to","children","size","MovieWrapper","Poster","DetailsWrapper","Title","Tagline","Overview","LinkList","DetailsLink","id","useParams","useState","movie","setMovie","location","useLocation","backLinkHref","state","from","console","log","useEffect","getMovieDetails","film","getFilm","poster_path","title","overview","tagline","src","alt","Suspense","fallback","axios","API_KEY","getTrendyMovies","response","data","getSearchedMovies","query","movieId","getMovieCredits","getMovieRewiews"],"sourceRoot":""}