{"version":3,"file":"static/js/400.86a94e43.chunk.js","mappings":"uRAEaA,EAAcC,EAAAA,GAAAA,IAAH,wHAQXC,EAAQD,EAAAA,GAAAA,IAAH,uCAGLE,EAAOF,EAAAA,GAAAA,EAAH,iGAMJG,EAAYH,EAAAA,GAAAA,EAAH,sF,SCKtB,EArBiB,SAAC,GAAgB,IAAdI,EAAa,EAAbA,OAClB,OACE,SAACL,EAAD,UACGK,EAAOC,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,cAAeC,EAA3C,EAA2CA,UAA3C,OACV,4BACE,SAACR,EAAD,CACES,IACEH,EAAY,wCACyBA,GADzB,oDAIdI,IAAKH,KAEP,SAACN,EAAD,UAAOM,KACP,UAACL,EAAD,eAAaG,EAAb,SAVQG,EADA,KAgBjB,ECcD,EA/Ba,WACX,IAAQG,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAEuBC,EAAAA,EAAAA,IAAgBN,GAFvC,cAEUO,EAFV,OAGUC,EAAOD,EAAKC,KAClBJ,EAAWI,GAJf,mDAOIC,QAAQC,IAAR,MAPJ,0DADc,uBAAC,WAAD,wBAWdC,EACD,GAAE,CAACX,IAEJS,QAAQC,IAAIP,IAGV,yBACGA,EAAQS,OAAS,GAChB,SAAC,EAAD,CAAUpB,OAAQW,IAElB,kCAIP,C,4MChCDU,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAe,mCAAG,6GAEAF,IAAAA,IAAA,sCAAyCC,IAFzC,cAEjBE,EAFiB,yBAGhBA,EAAST,MAHO,gCAMvBE,QAAQC,IAAR,MANuB,yDAAH,qDAUfO,EAAiB,mCAAG,WAAMC,GAAN,gGAEFL,IAAAA,IAAA,+BAAkCC,EAAlC,iCAAkEI,EAAlE,yBAFE,cAEnBF,EAFmB,yBAGlBA,EAAST,MAHS,gCAMzBE,QAAQC,IAAR,MANyB,yDAAH,sDAUjBS,EAAe,mCAAG,WAAMC,GAAN,gGAEAP,IAAAA,IAAA,gBAAmBO,EAAnB,oBAAsCN,EAAtC,oBAFA,cAEjBE,EAFiB,yBAGhBA,EAAST,MAHO,gCAMvBE,QAAQC,IAAR,MANuB,yDAAH,sDAUfJ,EAAe,mCAAG,WAAMc,GAAN,gGAEAP,IAAAA,IAAA,gBAAmBO,EAAnB,4BAA8CN,EAA9C,oBAFA,cAEjBE,EAFiB,OAGvBP,QAAQC,IAAIM,EAAST,MAHE,kBAIhBS,EAAST,MAJO,gCAOvBE,QAAQC,IAAR,MAPuB,yDAAH,sDAWfW,EAAe,mCAAG,WAAMD,GAAN,gGAEAP,IAAAA,IAAA,gBAAmBO,EAAnB,4BAA8CN,EAA9C,oBAFA,cAEjBE,EAFiB,OAGtBP,QAAQC,IAAIM,EAAST,MAHC,kBAIhBS,EAAST,MAJO,gCAOvBE,QAAQC,IAAR,MAPuB,yDAAH,qD","sources":["components/CastList/CastList.styled.js","components/CastList/CastList.jsx","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CastWrapper = styled.div`\ndisplay: grid;\npadding: 32px;\ngap: 48px;\n grid-template-columns: repeat(auto-fit, 260px);\n\n`\n\nexport const Photo = styled.img`\nwidth: 260px;\n`\nexport const Name = styled.p`\nfont-size: 24px;\nfont-weight: 500;\ntext-align: center;\npadding: 8px;\n`\nexport const Character = styled.p`\nfont-size: 24px;\n\nfont-style: italic;\ntext-align: center;\n`","import { PropTypes } from 'prop-types';\nimport { CastWrapper, Photo, Name, Character } from './CastList.styled';\n\nconst CastList = ({ actors }) => {\n  return (\n    <CastWrapper>\n      {actors.map(({ character, profile_path, original_name, credit_id }) => (\n        <div key={credit_id}>\n          <Photo\n            src={\n              profile_path\n                ? `https:image.tmdb.org/t/p/w500/${profile_path}`\n                : `https://via.placeholder.com/260x390?text=No+Photo`\n            }\n            alt={original_name}\n          />\n          <Name>{original_name}</Name>\n          <Character>\"{character}\"</Character>\n        </div>\n      ))}\n    </CastWrapper>\n  );\n};\n\nexport default CastList;\n\nCastList.propTypes = {\n  actors: PropTypes.arrayOf(\n    PropTypes.shape({\n      credit_id: PropTypes.string,\n      poster_path: PropTypes.string,\n      original_name: PropTypes.string,\n      character: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services/api';\nimport CastList from 'components/CastList/CastList';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [credits, setCredits] = useState([]);\n\n  useEffect(() => {\n    async function getCredits() {\n      try {\n        const data = await getMovieCredits(id);\n        const cast = data.cast;\n        setCredits(cast);\n        return;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getCredits();\n  }, [id]);\n\n  console.log(credits);\n\n  return (\n    <div>\n      {credits.length > 0 ? (\n        <CastList actors={credits} />\n      ) : (\n        'We have no cast for this movie'\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'e2ab7616285daea8fac6003f5ccdd72f';\n\nexport const getTrendyMovies = async() => {\n    try {\n        const response = await axios.get(`trending/movie/week?api_key=${API_KEY}`); \n        return response.data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getSearchedMovies = async(query) => {\n    try {\n        const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false`); \n        return response.data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getMovieDetails = async(movieId) => {\n    try {\n        const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`); \n        return response.data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getMovieCredits = async(movieId) => {\n    try {\n        const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`); \n        console.log(response.data);\n        return response.data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getMovieRewiews = async(movieId) => {\n    try {\n        const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`); \n         console.log(response.data);\n        return response.data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n};\n\n\n\n\n\n\n"],"names":["CastWrapper","styled","Photo","Name","Character","actors","map","character","profile_path","original_name","credit_id","src","alt","id","useParams","useState","credits","setCredits","useEffect","getMovieCredits","data","cast","console","log","getCredits","length","axios","API_KEY","getTrendyMovies","response","getSearchedMovies","query","getMovieDetails","movieId","getMovieRewiews"],"sourceRoot":""}