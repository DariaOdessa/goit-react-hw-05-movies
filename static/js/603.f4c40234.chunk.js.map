{"version":3,"file":"static/js/603.f4c40234.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\nmargin-top: 32px;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 320px);\n  gap: 16px;\n    \n`;\n\nexport const CardWrapper = styled.div`\nmargin-bottom: 20px;\nflex-basis: calc((100% - 32px) / 3);\nborder: 1px solid grey;\nborder-radius: 4px;\ncursor: pointer;\n\ntransition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\ntransition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n      box-shadow: 1px 4px 6px rgba(0, 0, 0, 0.16), 0px 4px 4px rgba(0, 0, 0, 0.06),\n          0px 1px 1px rgba(0, 0, 0, 0.12);\n      transform: scale(1.03);\n  }\n\n> a {\n  text-decoration: none;\n}\n`;\n\nexport const MovieName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import { PropTypes } from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Container, CardWrapper, MovieName } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  console.log(location.state);\n  return (\n    <Container>\n      {movies.map(({ poster_path, id, title }) => (\n        <CardWrapper key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              alt={title}\n            />\n            <MovieName>{title}</MovieName>\n          </Link>\n        </CardWrapper>\n      ))}\n    </Container>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\nimport { ImSearch } from 'react-icons/im';\n\nexport const SearcHeader = styled.header`\n    top: 0;\n    left: 0;\n    position: sticky;\n    z-index: 1100;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 64px;\n    padding-right: 24px;\n    padding-left: 24px;\n    padding-top: 12px;\n    padding-bottom: 12px;\n    color: #fff;\n    background-color: #3f51b5;\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n        0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`\n\n\nexport const SearchForm = styled.form`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n    border: 1px solid orangered;\n    margin-top: 16px;\n    margin-left: 32px;\n    `\n\n\nexport const SearchButton = styled.button`\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n\n    &:hover {\n         opacity: 1;\n    }\n`\n\nexport const SearchIcon = styled(ImSearch)`\nwidth: 24px;\nheight: 48px;\nfill: orangered;\n`\n\n\nexport const SearchLabel = styled.span`\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    border: 0;\n    `\n\n\nexport const Input = styled.input`\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n\n    &::placeholder {\n    font: inherit;\n    font-size: 18px;\n    }\n`","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport {\n  SearchForm,\n  SearchButton,\n  SearchIcon,\n  SearchLabel,\n  Input,\n} from './Searchbar.styled';\n\nconst Searchbar = ({ handleSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const onSearchSubmit = e => {\n    handleSubmit(value);\n\n    if (value === '') {\n      Notify.warning('Input is still empty, please type something!', {\n        width: '400px',\n        fontSize: '20px',\n        position: 'center-top',\n        distance: '50px',\n      });\n      return;\n    }\n    setValue('');\n  };\n\n  return (\n    <SearchForm onSubmit={onSearchSubmit}>\n      <SearchButton type=\"submit\">\n        <SearchLabel>\n          <SearchIcon />\n        </SearchLabel>\n      </SearchButton>\n\n      <Input\n        name=\"query\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        onChange={e => setValue(e.currentTarget.value)}\n        value={value}\n      />\n    </SearchForm>\n  );\n};\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Message = styled.p`\ndisplay: block;\nfont-size: 24px;\npadding-left: 32px;\nmargin-top: 32px;\n`","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { getSearchedMovies } from 'services/api';\nimport { Message } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) return;\n    async function getMovies() {\n      try {\n        const data = await getSearchedMovies(query);\n        setMovies(data.results);\n        return;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getMovies();\n  }, [query]);\n\n  const onFormSubmit = (e, query) => {\n    e.preventDefault();\n    const nextQuery = query !== '' ? { query } : {};\n    setSearchParams({ nextQuery });\n    setMovies([]);\n  };\n\n  return (\n    <div>\n      <Searchbar handleSubmit={onFormSubmit} />\n      {movies?.length > 0 && <MoviesList movies={movies} />}\n\n      {movies?.length === 0 && query !== '' && (\n        <Message>\n          Sorry, there is no films for your results! Try to find something else!\n        </Message>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e2ab7616285daea8fac6003f5ccdd72f';\n\nexport const getTrendyMovies = async() => {\n    try {\n        const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`); \n        return response.data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getSearchedMovies = async(query) => {\n    try {\n        const response = await axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false`); \n        console.log(response.data);\n        return response.data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getMovieDetails = async(movieId) => {\n    try {\n        const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}&language=en-US`); \n        return response.data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getMovieCredits = async(movieId) => {\n    try {\n        const response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`); \n        console.log(response.data);\n        return response.data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getMovieRewiews = async(movieId) => {\n    try {\n        const response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`); \n         console.log(response.data);\n        return response.data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n};\n\n\n\n\n\n\n"],"names":["Container","styled","CardWrapper","MovieName","movies","location","useLocation","console","log","state","map","poster_path","id","title","to","from","src","alt","SearchForm","SearchButton","SearchIcon","ImSearch","SearchLabel","Input","handleSubmit","useState","value","setValue","onSubmit","e","Notify","width","fontSize","position","distance","type","name","autoComplete","autoFocus","placeholder","onChange","currentTarget","Message","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getSearchedMovies","data","results","getMovies","preventDefault","nextQuery","length","MoviesList","axios","API_KEY","getTrendyMovies","response","getMovieDetails","movieId","getMovieCredits","getMovieRewiews"],"sourceRoot":""}