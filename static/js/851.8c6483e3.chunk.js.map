{"version":3,"file":"static/js/851.8c6483e3.chunk.js","mappings":"wRAEaA,EAAiBC,EAAAA,GAAAA,IAAH,iGAOdC,EAAaD,EAAAA,GAAAA,IAAH,sDAIVE,EAAUF,EAAAA,GAAAA,EAAH,+EAKPG,EAASH,EAAAA,GAAAA,EAAH,4G,SCGnB,EAboB,SAAC,GAAiB,IAAfI,EAAc,EAAdA,QACrB,OACE,SAACL,EAAD,UACGK,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,eAAgBC,EAA5B,EAA4BA,GAA5B,OACX,UAACP,EAAD,YACE,UAACE,EAAD,sBAAiBI,EAAeE,aAChC,UAACP,EAAD,eAAWI,EAAX,SAFeE,EADN,KAQlB,ECjBYE,EAAmBV,EAAAA,GAAAA,IAAH,0DCmC7B,EA/BgB,WACd,IAAQQ,GAAOG,EAAAA,EAAAA,MAAPH,GACR,GAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOR,EAAP,KAAgBS,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAiBjB,OAhBAC,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAEuBC,EAAAA,EAAAA,IAAgBX,GAFvC,cAEUY,EAFV,OAGUhB,EAAUgB,EAAKC,QACrBR,EAAWT,GAJf,mDAOIY,QAAQC,IAAR,MAPJ,0DADc,uBAAC,WAAD,wBAWdK,EACD,GAAE,CAACd,KAGF,SAACE,EAAD,UACGN,EAAQmB,OAAS,GAChB,SAAC,EAAD,CAAanB,QAASA,IAEtB,qCAIP,C,4MCjCDoB,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAe,mCAAG,6GAEAF,IAAAA,IAAA,uCAA0CC,IAF1C,cAEjBE,EAFiB,yBAGhBA,EAASP,MAHO,gCAMvBJ,QAAQC,IAAR,MANuB,yDAAH,qDAUfW,EAAiB,mCAAG,WAAMC,GAAN,gGAEFL,IAAAA,IAAA,gCAAmCC,EAAnC,iCAAmEI,EAAnE,yBAFE,cAEnBF,EAFmB,yBAGlBA,EAASP,MAHS,gCAMzBJ,QAAQC,IAAR,MANyB,yDAAH,sDAUjBa,EAAe,mCAAG,WAAMC,GAAN,gGAEAP,IAAAA,IAAA,iBAAoBO,EAApB,oBAAuCN,EAAvC,oBAFA,cAEjBE,EAFiB,yBAGhBA,EAASP,MAHO,gCAMvBJ,QAAQC,IAAR,MANuB,yDAAH,sDAUfe,EAAe,mCAAG,WAAMD,GAAN,gGAEAP,IAAAA,IAAA,iBAAoBO,EAApB,4BAA+CN,EAA/C,oBAFA,cAEjBE,EAFiB,OAGvBX,QAAQC,IAAIU,EAASP,MAHE,kBAIhBO,EAASP,MAJO,gCAOvBJ,QAAQC,IAAR,MAPuB,yDAAH,sDAWfE,EAAe,mCAAG,WAAMY,GAAN,gGAEAP,IAAAA,IAAA,iBAAoBO,EAApB,4BAA+CN,EAA/C,oBAFA,cAEjBE,EAFiB,OAGtBX,QAAQC,IAAIU,EAASP,MAHC,kBAIhBO,EAASP,MAJO,gCAOvBJ,QAAQC,IAAR,MAPuB,yDAAH,qD","sources":["components/ReviewList/ReviewsList.styled.js","components/ReviewList/ReviewsList.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ReviewsWrapper = styled.div`\ndisplay: grid;\ngap: 16px;\n grid-template-columns: repeat(auto-fit);\n\n`\n\nexport const ReviewCard = styled.div`\ndisplay: block;\nwidth: 100%\n`\nexport const Content = styled.p`\nfont-style: italic;\nfont-size: 24px;\npadding: 16px;\n`\nexport const Author = styled.p`\nfont-size: 24px;\npadding: 8px;\nfont-weight: 500;\nborder-bottom: 1px solid grey;\n`","import { PropTypes } from 'prop-types';\nimport {\n  ReviewsWrapper,\n  ReviewCard,\n  Content,\n  Author,\n} from './ReviewsList.styled';\n\nconst ReviewsList = ({ reviews }) => {\n  return (\n    <ReviewsWrapper>\n      {reviews.map(({ content, author_details, id }) => (\n        <ReviewCard key={id}>\n          <Author>author: {author_details.username}</Author>\n          <Content>\"{content}\"</Content>\n        </ReviewCard>\n      ))}\n    </ReviewsWrapper>\n  );\n};\n\nexport default ReviewsList;\n\nReviewsList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      content: PropTypes.string,\n      author_details: PropTypes.shape({\n        username: PropTypes.string,\n      }),\n      id: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ReviewsContainer = styled.div`\npadding: 32px;\nfont-size: 24px;\n`","import { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { getMovieRewiews } from 'services/api';\nimport ReviewsList from 'components/ReviewList/ReviewsList';\nimport { ReviewsContainer } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const location = useLocation();\n  console.log(location);\n\n  useEffect(() => {\n    async function getReviews() {\n      try {\n        const data = await getMovieRewiews(id);\n        const reviews = data.results;\n        setReviews(reviews);\n        return;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getReviews();\n  }, [id]);\n\n  return (\n    <ReviewsContainer>\n      {reviews.length > 0 ? (\n        <ReviewsList reviews={reviews} />\n      ) : (\n        'We have no reviews for this movie'\n      )}\n    </ReviewsContainer>\n  );\n};\n\nexport default Reviews;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e2ab7616285daea8fac6003f5ccdd72f';\n\nexport const getTrendyMovies = async() => {\n    try {\n        const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`); \n        return response.data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getSearchedMovies = async(query) => {\n    try {\n        const response = await axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false`); \n        return response.data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getMovieDetails = async(movieId) => {\n    try {\n        const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}&language=en-US`); \n        return response.data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getMovieCredits = async(movieId) => {\n    try {\n        const response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`); \n        console.log(response.data);\n        return response.data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getMovieRewiews = async(movieId) => {\n    try {\n        const response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`); \n         console.log(response.data);\n        return response.data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n};\n\n\n\n\n\n\n"],"names":["ReviewsWrapper","styled","ReviewCard","Content","Author","reviews","map","content","author_details","id","username","ReviewsContainer","useParams","useState","setReviews","location","useLocation","console","log","useEffect","getMovieRewiews","data","results","getReviews","length","axios","API_KEY","getTrendyMovies","response","getSearchedMovies","query","getMovieDetails","movieId","getMovieCredits"],"sourceRoot":""}